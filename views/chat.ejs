<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://code.jquery.com/jquery-latest.min.js"></script>
    <link rel="stylesheet" href="./css/style.css">
    <title>chat</title>
</head>
<style>
@import url('https://fonts.googleapis.com/css2?family=Do+Hyeon&family=Noto+Serif+KR:wght@600&family=Sunflower:wght@300&display=swap');

h3, button, label, h4, span, p{
font-family: 'Do Hyeon', sans-serif;

}
ul, li{
   list-style:none;
}
</style>
<script type="text/javascript">


</script>
<body>
    <body class="chat">

    <div class="chat__sidebar">
      <h3>유저목록</h3>
      <div id="users"></div>
    </div>

    <div class="chat__main">
      <ol id="messages" class="chat__messages"></ol>

      <div class="chat__footer">
        <form id="message-form">
          <input type="hidden" id="studyNo" value="<%=studyNo%>">
          <input type="hidden" id="email" value="<%=email%>">
          <input id="messageInput" name="message" type="text" placeholder="Message" autofocus autocomplete="off"/>
          <button id="submit-btn">전송</button>
		  <label for="upload-btn">파일 전송</label>
		  <input type="file" id="upload-btn" /></label>
        </form>
		
      </div>
    </div>

  </body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
<!-- <script src="/siofu/client.js"></script> -->
<script src="/js/bundle.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io-stream/0.9.1/socket.io-stream.min.js"></script>
<script src="/socket.io/socket.io.js"></script>


<script type="text/javascript">
	
    
	

	//let socket = io.connect("http://localhost:82");
	let socket = io.connect("https://ogong-chat.herokuapp.com/");
	var file = document.getElementById('upload-btn');
	let studyNo= $("#studyNo").val();
	let email = $("#email").val();
	var nickname = "";
	var profile = "default.jpg";
	//let socket = io.connect("https://ogong-chat.herokuapp.com/");

	// var uploader = new SocketIOFileUpload(socket);
	// uploader.listenOnInput(document.getElementById("upload-btn"));

	///////////////// 이미지 업로드////////////////////

	$(function(){
	
	console.log(email);
		
	fetch("http://127.0.0.1:5050/studyroom/json/getUser/"+email)
		.then(res => res.json())
		.then(json => {
			console.log(json);
			nickname = json.nickname;
			if(json.profile){
				profile = json.userImage;
			}
		});
	});

	

	
	
	//파일 업로드 함수//
	function fileupload(firstFile){


		//reader = new FileReader();


        var blobstream = ss.createBlobReadStream(firstFile);
        var stream = ss.createStream();
		var type = (firstFile.name).split('.');
		console.log("확장자: "+type[1]);
		var buffer = [];
		
		ss(socket).emit('upload', stream, {
			//id: socket.id,
			//studyNo: studyNo,
			//email: email,
			name: firstFile.name
			//type: firstFile.type,
			//size: firstFile.size
		});
		//var blobstream = ss.createBlobReadStream(firstFile);
		//ss.forceBase64 = true;
		var uploadSize = 0;
        blobstream.on('data', function(chunk){

            uploadSize += chunk.length;
            console.log(Math.floor(uploadSize / firstFile.size * 100)+ '%');
			buffer.push(chunk);
        });
		stream.on('end', function(){
			
			socket.emit('done', {
				studyNo: studyNo,
				email: email,
				name: nickname,
				filename: firstFile.name,
				type: firstFile.type
			});
        	console.log("업로드 끝"); 
    	});
		blobstream.pipe(stream);

	}
	////////////////////////////


	//drag and drop 이벤트//
	$(document).on("dragover drop", function(e) {
    	e.preventDefault();  
	}).on("drop", function(e) {
		e.preventDefault();  
    	var firstFile = e.originalEvent.dataTransfer.files[0];
		fileupload(firstFile);
	});

	
	// 파일 전송버튼으로 파일 업로드///
	$('#upload-btn').on('change', ()=>{
		if (!file.files.length) {
			return;
		}

		var firstFile = file.files[0];
		fileupload(firstFile);

	});
	
	function scrollToBottom() {
		let messages = document.querySelector('#messages').lastElementChild;
		messages.scrollIntoView();
	}
	
	socket.on('connect', function() {
		let data = {studyNo :studyNo,
					email :email,
					profile: profile,
					nickname: nickname};
		console.log(data);
		socket.emit('join', data, function(err) {
			if(err){
				alert(err);
			    window.location.href = '/';
			}else {
			    console.log('No Error');
			}
		})
	});

	
	
	socket.on('disconnect', function() {
		console.log('disconnected from server.');
		
		
	});

	socket.on('updateUsersList', function (users) {
		
		$('#users ol').remove();
		let ol = document.createElement('ol');
		
		users.forEach(function (user) {
			let li = document.createElement('li');
			let img = document.createElement('img');
			console.log(user.profile);
			img.src = 'files/'+user.profile;
			img.width = 40;
			img.height = 20;
		    //li.innerHTML = img;
			li.appendChild(img);
			li.append("  "+user.name);
			
		    ol.appendChild(li);
		});

		let usersList = $('#users');
		usersList.innerHTML = "";
		usersList.append(ol);
		})
		

		socket.on('newMessage', function(data) {
			data.type +=""
			console.log(data.type);
			console.log((data.type).substr(0,5));
			if((data.type).substr(0,5) == 'image'){
				data.text = '<img src="files/'+data.filename+'" height="150px" />';
			} else if ((data.type).substr(0,5) == 'video') {
			 	data.text = '<video id="draggable"  width="250" controls> <source src="files/'+data.filename+'" type="video/mp4"  ></video>'
			}
			console.log(data);
			const formattedTime = moment(data.createdAt).format('LT');
			if (email === data.email) {
				const html = 
				'<li class="message"><div class="mymessage__title"><span id="span1">'+
				' me </span><span id="span2">'
				+formattedTime+
				'</span></div><div class="mymessage__body"><p>'
				+data.text+
				'</p></div></li>';

				const div = document.createElement('div');
				div.innerHTML = html;

				$('#messages').append(div);
				scrollToBottom();
			} else {
				const html = 
				'<li class="message"><div class="message__title"><h4>'
				+data.nickname+
				'</h4><span>'
				+formattedTime+
				'</span></div><div class="message__body"><p>'
				+data.text+
				'</p></div></li>';

				const div = document.createElement('div');
				div.innerHTML = html;

				$('#messages').append(div);
				scrollToBottom();
			}
		
	});
	$('#submit-btn').on('click', function(e) {
		e.preventDefault();
		socket.emit("createMessage", {
		email: email,
		nickname: nickname,
		text: $('#messageInput').val()
		}, function() {
			$('#messageInput').val('').focus();
			
		});
	});


			//let buffer = reader.result;
			
			// let slice = firstFile.slice(0,4);
			// let view = new DataView(buffer);
			// let magic = view.getUint32(0, false);
			
			
			// switch(magic){
			// 	case 0xffd8ffe0: firstFile.verified_type = "image/jpeg"; break;
			// 	case 0x89504E47: firstFile.verified_type = "image/png"; break;
			// 	case 0x47474638: firstFile.verified_type = "image/gif"; break;
			// 	case 0x25504446: firstFile.verified_type = "application/pdf"; break;
			// 	case 0x504b0304: firstFile.verified_type = "application/zip"; break;
			// 	case 0x66747970: firstFile.verified_type = "video/mp4"; break;
			// }
</script>   
</body>
</html>

